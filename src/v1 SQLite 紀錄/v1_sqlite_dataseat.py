# -*- coding: utf-8 -*-
"""v1_sqlite_dataseat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZeQ0CMo2tAJpJLZlJ_L-p_1IzTjpR26J
"""

# -*- coding: utf-8 -*-
"""v1_SQLite_dataseat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17pEn55UZQDyh7UUPS2cwXva78Jx0Aumx
"""

import os
import sqlite3
from datetime import datetime
from flask import g # 這是用於 Flask 應用程式連線管理的關鍵

# ----------------------------------------------------
# 💡 數據持久化設定：Google Drive 路徑
# ----------------------------------------------------
# 請確保您在 Colab 中已經執行了：from google.colab import drive; drive.mount('/content/drive')
# 這個路徑是 Colab 虛擬機存取您 Google Drive 的標準入口
DRIVE_BASE_PATH = '/content/drive/MyDrive/projects/'

# 建議：將資料庫放在您 Drive 內的一個專屬資料夾
# 您可以將 'LineBot_Data' 替換為任何您喜歡的資料夾名稱
PROJECT_DATA_FOLDER = 'LineBot_Data'

# 最終資料庫檔案的完整路徑
DB_DIR = os.path.join(DRIVE_BASE_PATH, PROJECT_DATA_FOLDER)
DB_NAME = os.path.join(DB_DIR, 'emotion_diary.db')
# ----------------------------------------------------

def get_db():
    """獲取資料庫連線。確保在單個請求中只連線一次。"""
    if 'db' not in g:
        g.db = sqlite3.connect(DB_NAME)
        g.db.row_factory = sqlite3.Row
    return g.db

def close_db(e=None):
    """關閉資料庫連線，在 Flask 請求結束時會被呼叫。"""
    db = g.pop('db', None)
    if db is not None:
        db.close()

def init_db():
    """初始化資料庫：建立資料夾與資料表"""

    # 🌟 關鍵：如果資料夾不存在，就創建它 🌟
    if not os.path.exists(DB_DIR):
        print(f"資料夾不存在，正在創建: {DB_DIR}")
        os.makedirs(DB_DIR)

    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()

    # 建立資料表，包含 V1 到 V3 所有需要的欄位
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS diary_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id TEXT NOT NULL,
            timestamp TEXT NOT NULL,
            raw_text TEXT,
            sentiment TEXT,
            score REAL,
            keywords TEXT
        )
    ''')
    conn.commit()
    conn.close()
    print(f"✅ 資料庫 {DB_NAME} 初始化完成，資料將永久儲存在 Google Drive 上。")


def insert_log(user_id, raw_text, sentiment='Neutral', score=0.0, keywords='[]'):
    """將日記記錄存入資料庫 (使用 g.db 連線)。"""
    db = get_db()
    current_time = datetime.now().isoformat()
    db.execute(
        """
        INSERT INTO diary_logs
        (user_id, timestamp, raw_text, sentiment, score, keywords)
        VALUES (?, ?, ?, ?, ?, ?)
        """,
        (user_id, current_time, raw_text, sentiment, score, keywords)
    )
    db.commit()

def get_user_log_count(user_id):
    """查詢使用者總共寫了多少篇日記。"""
    db = get_db()
    result = db.execute(
        "SELECT COUNT(id) FROM diary_logs WHERE user_id = ?",
        (user_id,)
    ).fetchone()
    # fetchone() 返回的是一個 tuple，取第一個元素就是數量
    return result[0] if result else 0

if __name__ == '__main__':
    # 首次運行 database.py 時，會執行初始化
    init_db()